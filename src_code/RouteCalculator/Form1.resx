<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAASwAAAEsCAYAAAB5fY51AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wgAADsIBFShKgAAAGdBJREFUeF7tnWfIHcUfha1/e++9YRfUYEOxfbAhauyi2BJFURRjB0GsqOgX8YPY
        g6JoxBZRVNSIBbEgKCr2moiKGDT2tn/PZH83827u29vZ8XlgmPfO7s7u4T17mJ27u3eBqhAWWKAMKejw
        Ah1elKHiXzCWF+jwgsAyA2N5gQ4vCCwzMJYX6PCCwDIDY3mBDi8ILDMwlhfo8ILAMgNjeYEOLwgsMzCW
        F+jwgsAyA2N5gQ4vCCwzMJYX6PCCwDIDY3mBDi8ILDMwlhfo8ILAMgNjeYEOLwgsMzCWF+jwgsAyA2N5
        gQ4vCCwzMJYX6PCCwDIDY3mBDi8ILDMwlhfo8ILAMgNjeYEOLwgsMzCWF+jwgsAyA2N5gQ4vCCwzMJYX
        6PCCwDIDY3mBDi8ILDMwlhfo8ILAMgNjeYEOLwgsMzCWF+jwgsAyA2N5gQ4vCCwzMJYX6PCCwDIDY3mB
        Di8ILDMwlhfo8ILAMgNjeYEOLwgsMzCWF+jwgsAyA2N5gQ4vCCwzMJYX6PCCwDIDY3mBDi8ILDMwlhfo
        8ILAMgNjeYEOLwgsMzCWF+jwgsAyA2N5gQ4vCCwzMJYX6PCCwDIDY3mBDi8ILDMwlhfo8ILAMgNjeYEO
        LwgsMzCWF+jwgsAyA2N5gQ4vCCwzMJYX6PCCwDIDY3mBDi8ILDMwlhfo8ILAMgNjeYEOLwgsMzCWF+jw
        oiAdCyQxFAqFYl/q4Go9ElMC6PACHV6UoeJfMJYX6PCCwDIDY3mBDi8ILDMwlhfo8ILAMgNjeYEOLwgs
        MzCWF+jwgsAyA2N5gQ4vCCwzMJYX6PCCwDIDY3mBDi8ILDMwlhfo8ILAMgNjeYEOLwgsMzCWF+jwgsAy
        A2N5gQ4vCCwzMJYX6PCCwDIDY3mBDi8ILDMwlhfo8ILAMgNjeYEOLwgsMzCWF+jwgsAyA2N5gQ4vCCwz
        MJYX6PCCwDIDY3mBDi8ILDMwlhfo8ILAMgNjeYEOLwgsMzCWF+jwgsAyA2N5gQ4vCCwzMJYX6PCCwDID
        Y3mBDi8ILDMwlhfo8ILAMgNjeYEOLwgsMzCWF+jwgsAyA2N5gQ4vCCwzMJYX6PCCwDIDY3mBDi8ILDMw
        lhfo8ILAMgNjeYEOLwgsMzCWF+jwgsAyA2N5gQ4vCCwzMJYX6PCCwDIDY3mBDi8ILDMwlhfo8ILAMgNj
        eYEOLwgsMzCWF+jwgsAyA2N5gQ4vCCwzMJYX6PCCwDIDY3mBDi8ILDMwlhfo8ILAMgNjeYEOLwgsMzCW
        F+jwoiAdCyQxFAqFYl/q4Go9ElMC6PACHV6UoeJfMJYX6PCCwDIDY3mBDi8ILDMwlhfo8ILAMgNjeYEO
        LwgsMzCWF+jwgsAyA2N5gQ4vCCwzMJYX6PCCwDIDY3mBDi8ILDMwlhfo8ILAMgNjeYEOLwgsMzCWF+jw
        gsAyA2N5gQ4vCCwzMJYX6PCCwDIDY40P//zzTyrizz//7PxdCvjKCwLLjDbp+OOPP6pp06ZViy++eLXQ
        QgulYz///POLCi185QWBZUYbdEQgRUg1C4HlRzE66rr1YKzR56+//qpmzZpVLbzwwtWCCy6YjlX1zz//
        XK9RHvjKCwLLDFcdmp/SseUlRljbb799vVZ5SF8JFKOjrlsPxhoYQ7lc0zY6rmbRSCv+HgzqTwHYBgar
        zZVidNR168FYfaOQ0KXbb7/9Vv399991a/9ou7j800hqzpw56W+VlVZaqfP3QNAk/S+//JLCSscwmPDU
        urH+YLYbLgPV5k4xOuq69WCsvtFJrsBQGSjaRsejwDrmmGPSttGWFy0fCJoDUx+///573TJwfv311/ov
        AmsoFKOjrlsPxuodneAqgx3VaH3NUx155JHVvvvu2wkctUdQ6bKwvz5juYJqsPdqaV/aTkXbRRkr8JUX
        BJYZI61DJ7dO9sFeCgoFlELp2GOPrc4999xOXxEaMeLqD+1Xl4KqB7J+TuwzLiNVS8tYga+8ILDMGCkd
        OtF1gmvOabAhEWj7RRZZJB2Tbg5VPZTAGWiw9Ya2VcnDcqzAV14QWGaMlA6d1MMJijys8qJR12AYblgN
        l8Eeb5OR+n+MN8XoqOvWg7F6MtyRyCmnnNL5dlDhtfHGG1fvv//+oPscz7ASw90/vvKCwDLDRYfC6n//
        +1/1yCOPdMJvvMNnPMBXXhBYZrjoiMvB/zr4yotiHImxRpYILN228F8GX3lBYJnhpEPHoqJvCP+r4Csv
        CCwzxluHJtj1zVoUfdbclWrRbR5Lc106bpW77rqrs24J4CsvCCwzxluH9p8XTb6vtdZanW8Mr7/++k5o
        LbrooqltiSWW6PEgtO6OP/vsszth12akpwSK0VHXrQdjjQzaf17yIIpyxRVXdP5WWKlWOEVbFM2D6T6s
        NiMdJVCMjrpuPRhrZND+82M466yzqk8++ST9rfYYaa299trVuuuuWz344IPVOeeck9pOOOGEznr5um0e
        Zen4S6AYHXXdejDWyKD9xzHMnj27WnbZZTttUXTJp5HVU089lZ7t0yMzap8yZUra7ptvvkmjqwisSZMm
        pdAayeAaqxDU8ZdAMTrquvVgrJFB+19jjTWq3XffvZo5c2ZqU0ApILRMRe/B0gPIl19+eQqm/I0Nn3/+
        eXrvli4R88vEvffee0RCJvqI5wpHGx17CRSjo65bD8bqnTixB3KCr7nmmukYJk6cWK222mrVBhtskC71
        1LbNNtukkVW8LSH60wR7jtqjaA5L22q0peAbLgrDsXw+EV95QWCZMZI6IjQUMCr6u79bDvJvA1XnRZd/
        Ksstt1wnNFTUpnrJJZdMIx+9bG+PPfZI22h/q666apoHO+igg3rcAqF1B4r61z5jX2OFjrMEitFR160H
        Y81PBEqEiE72gQZWFI2K3nnnnRQWd955Z/X000+nviZMmNBZZ4cddujsK/qPgFTR+io//fRTddRRR3Xu
        olfR8r6IPlSiz7FEx1gCxeio69aDsboTJ7gCp78TXsuagaWwmz59ejVjxoy0PLbXZWJ8VlGwXXfddWmZ
        bjjVvoT6OPPMM1NYavL9wgsvrD766KNO/9Fvb2iZ+hrLy8AcHWMJFKOjrlsPxupOBIpGPvF3N9SuEZD2
        r6LXySgoFFgxalK7Ak2oLdZViUD59ttvq7322ivdqyUUXrHP/G8R3yRuuummKdCaaF21N7cbS6StBIrR
        UdetB2MNHYXBM8880xldvfnmm9V5551Xff/992lZb0WhFZeZ+hx9qeju+Ph8yy23pL91i8Stt96a9qHX
        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
</value>
  </data>
</root>